@model Sunshine.Business.Core.Product

@{
    ViewBag.Title = "更改商品";
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<section id="tabset">
    <ul>
        <li><a href="#cindex">产品更新</a></li>
    </ul>
<div id="cindex">

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Product</legend>

        @Html.HiddenFor(model => model.ProductId)

        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryId)
        </div>
         <div class="editor-field">
            @Html.DropDownListFor(model => model.CategoryId, ViewData["categorylist"] as IList<SelectListItem>, new { @class = "text-box single-line" })
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SecondCategoryId)
        </div>
         <div class="editor-field">
            @Html.DropDownListFor(model => model.SecondCategoryId, ViewData["secondcategorylist"] as IList<SelectListItem>)
            @Html.ValidationMessageFor(model => model.SecondCategoryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductName)
            @Html.ValidationMessageFor(model => model.ProductName)
        </div>

		 <div class="editor-label">
            @Html.LabelFor(model => model.Brand.BrandName)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.BrandId, ViewData["brandlist"] as IList<SelectListItem>, new { @class = "text-box single-line" })
            @Html.ValidationMessageFor(model => model.BrandId)
        </div>

		<div class="editor-label">
            @Html.LabelFor(model => model.ProductSize.ProductSizeName)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ProductSizeId, ViewData["productsizelist"] as IList<SelectListItem>, new { @class = "text-box single-line" })
            @Html.ValidationMessageFor(model => model.ProductSizeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductMark)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductMark)
            @Html.ValidationMessageFor(model => model.ProductMark)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductProcessor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductProcessor)
            @Html.ValidationMessageFor(model => model.ProductProcessor)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductVideo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductVideo)
            @Html.ValidationMessageFor(model => model.ProductVideo)
        </div> 

        <div class="editor-label">
            @Html.LabelFor(model => model.PriceInterval.PriceIntervalName)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.PriceIntervalId, ViewData["productintervallist"] as IList<SelectListItem>)
            @Html.ValidationMessageFor(model => model.PriceIntervalId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AgentPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AgentPrice)
            @Html.ValidationMessageFor(model => model.AgentPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DeliveryPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DeliveryPrice)
            @Html.ValidationMessageFor(model => model.DeliveryPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductStock)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductStock)
            @Html.ValidationMessageFor(model => model.ProductStock)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductAdditions)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductAdditions)
            @Html.ValidationMessageFor(model => model.ProductAdditions)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductColor.ProductColorId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ProductColor.ProductColorId, ViewData["productcolorlist"] as IList<SelectListItem>)
            @Html.ValidationMessageFor(model => model.ProductColor.ProductColorId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProductDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ProductDescription)
            @Html.ValidationMessageFor(model => model.ProductDescription)
        </div>

		<div id="ext"></div>
        <p>
            <input type="submit" value="确定" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
</div>
</section>
